generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  event_id        Int           @id @default(autoincrement()) @unique
  name            String
  operating_area  String
  image           String?       @default("")
  start_date      DateTime      @default(now())
  end_date        DateTime      @default(now())
  participants    Participant[]
  winner_history  WinnerHistory[]
  prizes          Prize[]
}

model Participant {
  participant_id  Int           @id @default(autoincrement()) @unique
  nipp            String        
  name            String
  operating_area  String
  address         String?
  event_id        Int
  event           Event?        @relation(fields: [event_id], references: [event_id], onDelete: Cascade)
  winner_history  WinnerHistory[]
}

model WinnerHistory {
  winner_history_id Int           @id @default(autoincrement()) @unique
  event_id          Int
  participant_id    Int
  prize_id          Int
  operating_area    String
  timestamp         DateTime      @default(now())

  event             Event?        @relation(fields: [event_id], references: [event_id], onDelete: Cascade)
  participant       Participant?  @relation(fields: [participant_id], references: [participant_id], onDelete: Cascade)
  prize             Prize?        @relation(fields: [prize_id], references: [prize_id], onDelete: Cascade)
}

model Prize {
  prize_id         Int            @id @default(autoincrement()) @unique
  name             String
  quantity         Int
  image            String?        @default("")
  operating_area   String
  event_id         Int
  winner_history   WinnerHistory[]
  event            Event?         @relation(fields: [event_id], references: [event_id], onDelete: Cascade)
}

model User {
  nipp             String         @id @unique
  password         String
  user_name        String
  operating_area   String
  unit             String
}